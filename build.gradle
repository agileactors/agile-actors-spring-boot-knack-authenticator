plugins {
    id 'java-library'
    id 'maven-publish'
    id 'checkstyle'
    id 'signing'
}

description = 'Adds integration with Knack for authentication reasons.'

group = 'com.agileactors'
version = System.getenv("BUILD_VERSION") ? System.getenv("BUILD_VERSION") : '1.2.0'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    annotationProcessor(platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion"))
    api(platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion"))

    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-security'
    api 'org.projectlombok:lombok'
    api 'org.springframework.boot:spring-boot-configuration-processor'

    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.fasterxml.jackson.core:jackson-annotations'
}

tasks.named('test') {
    useJUnitPlatform()
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    setRequired {
        gradle.taskGraph.hasTask("publish")
    }

    useInMemoryPgpKeys(System.getenv('GPG_SECRET_KEY'), System.getenv('GPG_PASSPHRASE'))
    sign publishing.publications
}

jar {
    manifest {
        attributes["Implementation-Version"] = "${archiveVersion.get()}"
        attributes["Implementation-Title"] = "Knack Authenticator"
        attributes["Implementation-Vendor"] = "Agile Actors"
        attributes["Created-By"] = System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = project.name
                packaging = 'jar'
                description = project.description

                url = "https://github.com/agileactors/${project.name}"

                scm {
                    connection = "git@github.com:agileactors/${project.name}.git"
                    developerConnection = "git@github.com:agileactors/${project.name}.git"
                    url = "https://github.com/agileactors/${project.name}"
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
            }

            from project.components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            name = "Sonatype"
            url = "https://s01.oss.sonatype.org/content/repositories/releases"
            credentials {
                username = project.findProperty("oss.user") ?: System.getenv("OSS_USER")
                password = project.findProperty("oss.token") ?: System.getenv("OSS_TOKEN")
            }
        }
    }
}

task printVersion {
    doLast {
        println project.version
    }
}